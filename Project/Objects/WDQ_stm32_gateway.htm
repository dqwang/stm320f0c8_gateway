<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\WDQ_stm32_gateway.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\WDQ_stm32_gateway.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050041: Last Updated: Sun Jun 04 18:27:30 2017
<BR><P>
<H3>Maximum Stack Usage =        144 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
SysTick_Handler &rArr; PcdRequest &rArr; PcdComMF522 &rArr; ClearBitMask &rArr; ReadRawRC
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[14b]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[15]">ADC1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[15]">ADC1_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[15]">ADC1_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[12]">DMA1_Channel1_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[13]">DMA1_Channel2_3_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[14]">DMA1_Channel4_5_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[f]">EXTI0_1_IRQHandler</a> from stm32f0xx_it.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[10]">EXTI2_3_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[11]">EXTI4_15_IRQHandler</a> from stm32f0xx_it.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[d]">FLASH_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[7]">HardFault_Handler</a> from stm32f0xx_it.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[1d]">I2C1_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[1e]">I2C2_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[6]">NMI_Handler</a> from stm32f0xx_it.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[9]">PendSV_Handler</a> from stm32f0xx_it.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[e]">RCC_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[c]">RTC_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[5]">Reset_Handler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[1f]">SPI1_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[20]">SPI2_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[8]">SVC_Handler</a> from stm32f0xx_it.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[a]">SysTick_Handler</a> from stm32f0xx_it.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[23]">SystemInit</a> from system_stm32f0xx.o(.text) referenced from startup_stm32f030.o(.text)
 <LI><a href="#[19]">TIM14_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[1a]">TIM15_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[1b]">TIM16_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[1c]">TIM17_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[16]">TIM1_BRK_UP_TRG_COM_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[17]">TIM1_CC_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[18]">TIM3_IRQHandler</a> from stm32f0xx_it.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[21]">USART1_IRQHandler</a> from stm32f0xx_it.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[22]">USART2_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[b]">WWDG_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[25]">__main</a> from __main.o(!!!main) referenced from startup_stm32f030.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[25]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[26]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[28]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[14e]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[14f]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[29]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[150]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[2d]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[151]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[152]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[153]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[154]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[155]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[156]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[157]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[158]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[159]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[15a]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[15b]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[15c]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[15d]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[15e]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[15f]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[160]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[161]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[162]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[163]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[164]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[165]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[32]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[166]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[167]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[168]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[169]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[16a]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[16b]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[27]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[16c]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[2a]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[2c]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[16d]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[2e]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; LOCK_INIT &rArr; SYS_INIT &rArr; USART_INIT &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[16e]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[14d]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[31]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[16f]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[33]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[124]"></a>__aeabi_memcpy4</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, rt_memcpy.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lora_Sendtest
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[170]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy.o(.emb_text), UNUSED)

<P><STRONG><a name="[35]"></a>GPIO_INIT</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, drv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>

<P><STRONG><a name="[38]"></a>TIM3_INIT</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, drv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
</UL>

<P><STRONG><a name="[3d]"></a>USART_INIT</STRONG> (Thumb, 144 bytes, Stack size 40 bytes, drv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = USART_INIT &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_INIT
</UL>

<P><STRONG><a name="[44]"></a>USART_lp_INIT</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, drv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
</UL>

<P><STRONG><a name="[45]"></a>SYSTICK_INIT</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, drv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SYSTICK_INIT &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_INIT
</UL>

<P><STRONG><a name="[48]"></a>SYS_INIT</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, drv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = SYS_INIT &rArr; USART_INIT &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSTICK_INIT
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_INIT
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_INIT
</UL>

<P><STRONG><a name="[4a]"></a>uart_putc</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, drv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_puts
</UL>

<P><STRONG><a name="[49]"></a>uart_puts</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, drv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putc
</UL>

<P><STRONG><a name="[4b]"></a>uart_send</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, drv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putc
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FP_SendCmd_Empty
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FP_SendCmd_DeleteChar
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FP_SendCmd_AutoEnroll
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FP_SendCmd_AutoIdentify
</UL>

<P><STRONG><a name="[171]"></a>SYS_RST</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, drv.o(.text), UNUSED)

<P><STRONG><a name="[4c]"></a>Init_GPIO_LP</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, drv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEYBD_lp_INIT
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCU_SLEEP
</UL>

<P><STRONG><a name="[4e]"></a>MCU_SLEEP</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, drv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_EnterSTOPMode
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_INIT
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_GPIO_LP
</UL>

<P><STRONG><a name="[51]"></a>SPIx_Init</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, drv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = SPIx_Init &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[68]"></a>delay_us</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, func.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VOICE_IIC_WRITE
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRawRC
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRawRC
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276WriteBuffer
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276ReadBuffer
</UL>

<P><STRONG><a name="[55]"></a>delay_ms</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, func.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VOICE_test
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VOICE_IIC_WRITE
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_ADMIN_SET
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEYBD_MAIN
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12_Init
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTO_Forward
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RC522_Config
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdReset
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTO_Back
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;statedelay
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;commdelay
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276Reset
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Send
</UL>

<P><STRONG><a name="[54]"></a>commdelay</STRONG> (Thumb, 96 bytes, Stack size 20 bytes, func.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FP_RcvDeal
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FP_POWER_ON
</UL>

<P><STRONG><a name="[56]"></a>statedelay</STRONG> (Thumb, 90 bytes, Stack size 36 bytes, func.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USER_GETPASSWORD
</UL>

<P><STRONG><a name="[ab]"></a>countsum</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, func.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FP_SendCmd_Empty
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FP_SendCmd_DeleteChar
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FP_SendCmd_AutoEnroll
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FP_SendCmd_AutoIdentify
</UL>

<P><STRONG><a name="[172]"></a>Get_CRC</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, func.o(.text), UNUSED)

<P><STRONG><a name="[2f]"></a>main</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = main &rArr; LOCK_INIT &rArr; SYS_INIT &rArr; USART_INIT &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276InitIo
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lora_Sendtest
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_RF
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_INIT
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[6]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f0xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f0xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f0xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f0xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>SysTick_Handler</STRONG> (Thumb, 244 bytes, Stack size 8 bytes, stm32f0xx_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = SysTick_Handler &rArr; PcdRequest &rArr; PcdComMF522 &rArr; ClearBitMask &rArr; ReadRawRC
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdRequest
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTO_Back
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>USART1_IRQHandler</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, stm32f0xx_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USART1_IRQHandler &rArr; USART_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TIM3_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f0xx_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM3_IRQHandler &rArr; TIM_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f0xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 180 bytes, Stack size 8 bytes, stm32f0xx_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EXTI4_15_IRQHandler &rArr; RF_SendPacket &rArr; SX1276_TxPacket &rArr; SX1276Write &rArr; SX1276WriteBuffer &rArr; SPI_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_WORInit
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Sleepmode
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_SendPacket
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_RxFixiPacket
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_RXmode
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearFlag
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>SystemInit</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, system_stm32f0xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemInit
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_INIT
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(.text)
</UL>
<P><STRONG><a name="[6b]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, system_stm32f0xx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[6c]"></a>WriteRawRC</STRONG> (Thumb, 188 bytes, Stack size 24 bytes, card.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = WriteRawRC
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RC522_Config
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdReset
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalulateCRC
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdAnticoll
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdComMF522
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearBitMask
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBitMask
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdRequest
</UL>

<P><STRONG><a name="[6d]"></a>ReadRawRC</STRONG> (Thumb, 182 bytes, Stack size 24 bytes, card.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ReadRawRC
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARD_INIT
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdAntennaOn
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdAuthState
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalulateCRC
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdComMF522
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearBitMask
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBitMask
</UL>

<P><STRONG><a name="[6f]"></a>SetBitMask</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, card.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SetBitMask &rArr; ReadRawRC
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRawRC
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRawRC
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdAntennaOn
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalulateCRC
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdAnticoll
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdComMF522
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdRequest
</UL>

<P><STRONG><a name="[70]"></a>ClearBitMask</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, card.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ClearBitMask &rArr; ReadRawRC
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRawRC
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRawRC
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RC522_Config
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdAntennaOff
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdReset
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdSelect
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalulateCRC
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdAnticoll
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdComMF522
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdRequest
</UL>

<P><STRONG><a name="[71]"></a>PcdComMF522</STRONG> (Thumb, 312 bytes, Stack size 48 bytes, card.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = PcdComMF522 &rArr; ClearBitMask &rArr; ReadRawRC
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearBitMask
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBitMask
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRawRC
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRawRC
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdHalt
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdBakValue
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdValue
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdWrite
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdRead
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdAuthState
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdSelect
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdAnticoll
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdRequest
</UL>

<P><STRONG><a name="[5b]"></a>PcdRequest</STRONG> (Thumb, 86 bytes, Stack size 48 bytes, card.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = PcdRequest &rArr; PcdComMF522 &rArr; ClearBitMask &rArr; ReadRawRC
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdComMF522
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearBitMask
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBitMask
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRawRC
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[72]"></a>PcdAnticoll</STRONG> (Thumb, 112 bytes, Stack size 48 bytes, card.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdComMF522
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearBitMask
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBitMask
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRawRC
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARD_GETID
</UL>

<P><STRONG><a name="[73]"></a>CalulateCRC</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, card.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearBitMask
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBitMask
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRawRC
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRawRC
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdHalt
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdBakValue
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdValue
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdWrite
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdRead
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdSelect
</UL>

<P><STRONG><a name="[74]"></a>PcdSelect</STRONG> (Thumb, 110 bytes, Stack size 48 bytes, card.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalulateCRC
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdComMF522
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearBitMask
</UL>

<P><STRONG><a name="[75]"></a>PcdAuthState</STRONG> (Thumb, 104 bytes, Stack size 64 bytes, card.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdComMF522
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRawRC
</UL>

<P><STRONG><a name="[76]"></a>PcdRead</STRONG> (Thumb, 82 bytes, Stack size 48 bytes, card.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalulateCRC
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdComMF522
</UL>

<P><STRONG><a name="[77]"></a>PcdWrite</STRONG> (Thumb, 148 bytes, Stack size 48 bytes, card.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalulateCRC
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdComMF522
</UL>

<P><STRONG><a name="[78]"></a>PcdValue</STRONG> (Thumb, 202 bytes, Stack size 64 bytes, card.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalulateCRC
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdComMF522
</UL>

<P><STRONG><a name="[79]"></a>PcdBakValue</STRONG> (Thumb, 196 bytes, Stack size 48 bytes, card.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalulateCRC
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdComMF522
</UL>

<P><STRONG><a name="[7a]"></a>PcdHalt</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, card.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalulateCRC
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdComMF522
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARD_lp_INIT
</UL>

<P><STRONG><a name="[7b]"></a>PcdReset</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, card.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearBitMask
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRawRC
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARD_INIT
</UL>

<P><STRONG><a name="[7c]"></a>PcdAntennaOn</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, card.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBitMask
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRawRC
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RC522_Config
</UL>

<P><STRONG><a name="[7d]"></a>PcdAntennaOff</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, card.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearBitMask
</UL>

<P><STRONG><a name="[7e]"></a>GPIO_INIT_CARD1</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, card.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARD_INIT
</UL>

<P><STRONG><a name="[7f]"></a>GPIO_INIT_CARD2</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, card.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARD_INIT
</UL>

<P><STRONG><a name="[80]"></a>GPIO_INIT_CARD3</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, card.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARD_INIT
</UL>

<P><STRONG><a name="[81]"></a>RC522_Config</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, card.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdAntennaOn
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearBitMask
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRawRC
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARD_INIT
</UL>

<P><STRONG><a name="[82]"></a>CARD_INIT</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, card.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RC522_Config
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_CARD3
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_CARD2
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_CARD1
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdReset
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRawRC
</UL>

<P><STRONG><a name="[83]"></a>CARD_lp_INIT</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, card.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdHalt
</UL>

<P><STRONG><a name="[84]"></a>CARD_GETID</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, card.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VOICE
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdAnticoll
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARD_Identify
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARD_Enroll
</UL>

<P><STRONG><a name="[86]"></a>CARD_Enroll</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, card.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VOICE
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyBD_State_Rst
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARD_UPDATA_CARDID
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARD_Get_Enroll_CARDID
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARD_GETID
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARD_MAIN
</UL>

<P><STRONG><a name="[8a]"></a>CARD_Identify</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, card.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VOICE
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTO_Forward
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyBD_State_Rst
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARD_IDCheck
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARD_GETID
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARD_MAIN
</UL>

<P><STRONG><a name="[8d]"></a>CARD_MAIN</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, card.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VOICE
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearPassWord
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARD_Identify
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARD_Enroll
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_MAIN
</UL>

<P><STRONG><a name="[8f]"></a>Flash_Erase</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, database.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write
</UL>

<P><STRONG><a name="[97]"></a>Flash_Read</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, database.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USER_PassWordCheck
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USER_UPDATA_USERID
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USER_Get_Enroll_USERID
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEYBD_Get_Enroll_USERID
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FP_UPDATA_FPID
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FP_Get_Enroll_FPID
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_ADMIN_PASSWORD
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_LOCK_State
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARD_UPDATA_CARDID
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARD_IDCheck
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARD_Get_Enroll_CARDID
</UL>

<P><STRONG><a name="[94]"></a>Flash_Write</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, database.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Erase
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEYBD_MAIN
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USER_UPDATA_USERID
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FP_UPDATA_FPID
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_ADMIN_PASSWORD
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_LOCK_State
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARD_UPDATA_CARDID
</UL>

<P><STRONG><a name="[96]"></a>Get_LOCK_State</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, database.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Read
</UL>

<P><STRONG><a name="[98]"></a>Set_LOCK_State</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, database.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write
</UL>

<P><STRONG><a name="[99]"></a>Get_ADMIN_PASSWORD</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, database.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Read
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_ADMIN_SET
</UL>

<P><STRONG><a name="[9b]"></a>Set_ADMIN_PASSWORD</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, database.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_ADMIN_SET
</UL>

<P><STRONG><a name="[9c]"></a>FP_Get_Enroll_FPID</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, database.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdAutoEnroll
</UL>

<P><STRONG><a name="[9d]"></a>FP_UPDATA_FPID</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, database.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Read
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdAutoEnroll
</UL>

<P><STRONG><a name="[9e]"></a>KEYBD_Get_Enroll_USERID</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, database.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Read
</UL>

<P><STRONG><a name="[9f]"></a>USER_Get_Enroll_USERID</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, database.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PASSWORD_Enroll
</UL>

<P><STRONG><a name="[a0]"></a>USER_UPDATA_USERID</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, database.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Read
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PASSWORD_Enroll
</UL>

<P><STRONG><a name="[87]"></a>CARD_Get_Enroll_CARDID</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, database.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARD_Enroll
</UL>

<P><STRONG><a name="[88]"></a>CARD_UPDATA_CARDID</STRONG> (Thumb, 104 bytes, Stack size 56 bytes, database.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Read
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARD_Enroll
</UL>

<P><STRONG><a name="[8b]"></a>CARD_IDCheck</STRONG> (Thumb, 86 bytes, Stack size 20 bytes, database.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARD_Identify
</UL>

<P><STRONG><a name="[a1]"></a>GPIO_INIT_Touch</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, fp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCFG_EXTILineConfig
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FP_lp_INIT
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FP_INIT
</UL>

<P><STRONG><a name="[a4]"></a>GPIO_INIT_POWER</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, fp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FP_lp_INIT
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FP_INIT
</UL>

<P><STRONG><a name="[a6]"></a>FP_POWER_OFF</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, fp.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FP_MAIN
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FP_lp_INIT
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FP_INIT
</UL>

<P><STRONG><a name="[a5]"></a>FP_INIT</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, fp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FP_POWER_OFF
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_POWER
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_Touch
</UL>

<P><STRONG><a name="[a7]"></a>FP_lp_INIT</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, fp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FP_POWER_OFF
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_POWER
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_Touch
</UL>

<P><STRONG><a name="[a8]"></a>GET_FP_Touch</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, fp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FP_MAIN
</UL>

<P><STRONG><a name="[a9]"></a>FP_POWER_ON</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, fp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;commdelay
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEYBD_MAIN
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FP_MAIN
</UL>

<P><STRONG><a name="[aa]"></a>FP_SendCmd_AutoIdentify</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, fp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;countsum
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdAutoIdentify
</UL>

<P><STRONG><a name="[ac]"></a>FP_SendCmd_AutoEnroll</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, fp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;countsum
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdAutoEnroll
</UL>

<P><STRONG><a name="[ad]"></a>FP_SendCmd_DeleteChar</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, fp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;countsum
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdDeleteChar
</UL>

<P><STRONG><a name="[ae]"></a>FP_SendCmd_Empty</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, fp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;countsum
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdEmpty
</UL>

<P><STRONG><a name="[af]"></a>FP_RcvDeal</STRONG> (Thumb, 310 bytes, Stack size 24 bytes, fp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VOICE
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;commdelay
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdEmpty
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdDeleteChar
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdAutoIdentify
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdAutoEnroll
</UL>

<P><STRONG><a name="[b0]"></a>CmdAutoEnroll</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, fp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FP_RcvDeal
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FP_SendCmd_AutoEnroll
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FP_UPDATA_FPID
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FP_Get_Enroll_FPID
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VOICE
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyBD_State_Rst
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FP_MAIN
</UL>

<P><STRONG><a name="[b1]"></a>CmdAutoIdentify</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, fp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FP_RcvDeal
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FP_SendCmd_AutoIdentify
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VOICE
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTO_Forward
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FP_MAIN
</UL>

<P><STRONG><a name="[b2]"></a>CmdDeleteChar</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, fp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FP_RcvDeal
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FP_SendCmd_DeleteChar
</UL>

<P><STRONG><a name="[b3]"></a>CmdEmpty</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, fp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FP_RcvDeal
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FP_SendCmd_Empty
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VOICE
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEYBD_MAIN
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FP_MAIN
</UL>

<P><STRONG><a name="[b4]"></a>FP_MAIN</STRONG> (Thumb, 176 bytes, Stack size 8 bytes, fp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdEmpty
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdAutoIdentify
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdAutoEnroll
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FP_POWER_ON
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_FP_Touch
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FP_POWER_OFF
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VOICE
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearPassWord
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_MAIN
</UL>

<P><STRONG><a name="[b5]"></a>GPIO_INIT_DEL</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, keybd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCFG_EXTILineConfig
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>

<P><STRONG><a name="[b6]"></a>GPIO_INIT_ADD</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, keybd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCFG_EXTILineConfig
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>

<P><STRONG><a name="[b7]"></a>GPIO_INIT_RST</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, keybd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCFG_EXTILineConfig
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEYBD_INIT
</UL>

<P><STRONG><a name="[b8]"></a>GPIO_INIT_LOGO</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, keybd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCFG_EXTILineConfig
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEYBD_INIT
</UL>

<P><STRONG><a name="[b9]"></a>GET_ButtonDEL</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, keybd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>

<P><STRONG><a name="[ba]"></a>GET_ButtonADD</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, keybd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>

<P><STRONG><a name="[bb]"></a>GET_ButtonRST</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, keybd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEYBD_MAIN
</UL>

<P><STRONG><a name="[bc]"></a>GPIO_KBDLED</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, keybd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEYBD_INIT
</UL>

<P><STRONG><a name="[d3]"></a>Disp_KBD</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, keybd.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12_Reading_Start
</UL>

<P><STRONG><a name="[173]"></a>Disp_KBD_Rst</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, keybd.o(.text), UNUSED)

<P><STRONG><a name="[bd]"></a>KEYBD_INIT</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, keybd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_KBDLED
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_LOGO
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_RST
</UL>

<P><STRONG><a name="[4d]"></a>KEYBD_lp_INIT</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, keybd.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_GPIO_LP
</UL>

<P><STRONG><a name="[be]"></a>GPIO_INIT_INT_TSM12</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, keybd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCFG_EXTILineConfig
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12_Init
</UL>

<P><STRONG><a name="[bf]"></a>GPIO_INIT_EN_TSM12</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, keybd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12_Init
</UL>

<P><STRONG><a name="[c0]"></a>IIc_init_TSM12</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, keybd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12_Init
</UL>

<P><STRONG><a name="[c1]"></a>IIC_WR_MODE_TSM12</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, keybd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_WRITE_TSM12
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_WRITE_ACK_TSM12
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STOP_CONDITION_TSM12
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;START_CONDITION_TSM12
</UL>

<P><STRONG><a name="[c2]"></a>IIC_RD_MODE_TSM12</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, keybd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_READ_TSM12
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_READ_ACK_TSM12
</UL>

<P><STRONG><a name="[c5]"></a>IIC_DELAY_TSM12</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, keybd.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIICRegister_TSM12
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_READ_TSM12
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_WRITE_TSM12
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_READ_ACK_TSM12
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_WRITE_ACK_TSM12
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STOP_CONDITION_TSM12
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;START_CONDITION_TSM12
</UL>

<P><STRONG><a name="[c3]"></a>SDA_V_TSM12</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, keybd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_READ_TSM12
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_READ_ACK_TSM12
</UL>

<P><STRONG><a name="[c4]"></a>START_CONDITION_TSM12</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, keybd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_DELAY_TSM12
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_WR_MODE_TSM12
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIICRegister_TSM12
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetIICRegister_TSM12
</UL>

<P><STRONG><a name="[c6]"></a>STOP_CONDITION_TSM12</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, keybd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_DELAY_TSM12
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_WR_MODE_TSM12
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIICRegister_TSM12
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetIICRegister_TSM12
</UL>

<P><STRONG><a name="[c7]"></a>IIC_WRITE_ACK_TSM12</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, keybd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_DELAY_TSM12
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_WR_MODE_TSM12
</UL>

<P><STRONG><a name="[c8]"></a>IIC_READ_ACK_TSM12</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, keybd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_V_TSM12
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_DELAY_TSM12
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_RD_MODE_TSM12
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIICRegister_TSM12
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_WRITE_TSM12
</UL>

<P><STRONG><a name="[c9]"></a>IIC_WRITE_TSM12</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, keybd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_READ_ACK_TSM12
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_DELAY_TSM12
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_WR_MODE_TSM12
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIICRegister_TSM12
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetIICRegister_TSM12
</UL>

<P><STRONG><a name="[ca]"></a>IIC_READ_TSM12</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, keybd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_V_TSM12
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_DELAY_TSM12
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_RD_MODE_TSM12
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIICRegister_TSM12
</UL>

<P><STRONG><a name="[cb]"></a>SetIICRegister_TSM12</STRONG> (Thumb, 144 bytes, Stack size 40 bytes, keybd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_WRITE_TSM12
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STOP_CONDITION_TSM12
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;START_CONDITION_TSM12
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Exit_sleep_mode
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Noise_State
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Go_sleep_mode
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12_Init
</UL>

<P><STRONG><a name="[cc]"></a>GetIICRegister_TSM12</STRONG> (Thumb, 160 bytes, Stack size 40 bytes, keybd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_READ_TSM12
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_WRITE_TSM12
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_READ_ACK_TSM12
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STOP_CONDITION_TSM12
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;START_CONDITION_TSM12
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_DELAY_TSM12
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12_Reading_Start
</UL>

<P><STRONG><a name="[cd]"></a>TSM12_Init</STRONG> (Thumb, 160 bytes, Stack size 8 bytes, keybd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetIICRegister_TSM12
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIc_init_TSM12
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_EN_TSM12
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_INT_TSM12
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>

<P><STRONG><a name="[ce]"></a>Go_sleep_mode</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, keybd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetIICRegister_TSM12
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TSM12_lp_Init
</UL>

<P><STRONG><a name="[cf]"></a>TSM12_lp_Init</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, keybd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Go_sleep_mode
</UL>

<P><STRONG><a name="[d0]"></a>Noise_State</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, keybd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetIICRegister_TSM12
</UL>

<P><STRONG><a name="[d1]"></a>Exit_sleep_mode</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, keybd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetIICRegister_TSM12
</UL>

<P><STRONG><a name="[d2]"></a>TSM12_Reading_Start</STRONG> (Thumb, 294 bytes, Stack size 16 bytes, keybd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIICRegister_TSM12
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_KBD
</UL>

<P><STRONG><a name="[d6]"></a>Check_PassWord</STRONG> (Thumb, 56 bytes, Stack size 12 bytes, keybd.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_ADMIN_SET
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEYBD_MAIN
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PASSWORD_Enroll
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USER_PassWordCheck
</UL>

<P><STRONG><a name="[d4]"></a>USER_GETPASSWORD</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, keybd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;statedelay
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PASSWORD_Enroll
</UL>

<P><STRONG><a name="[d5]"></a>USER_PassWordCheck</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, keybd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_PassWord
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PASSWORD_Identify
</UL>

<P><STRONG><a name="[d7]"></a>PASSWORD_Enroll</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, keybd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USER_GETPASSWORD
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_PassWord
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USER_UPDATA_USERID
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USER_Get_Enroll_USERID
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VOICE
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyBD_State_Rst
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PASSWORD_MAIN
</UL>

<P><STRONG><a name="[d8]"></a>PASSWORD_Identify</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, keybd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USER_PassWordCheck
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VOICE
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTO_Forward
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyBD_State_Rst
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PASSWORD_MAIN
</UL>

<P><STRONG><a name="[d9]"></a>PASSWORD_MAIN</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, keybd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PASSWORD_Identify
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PASSWORD_Enroll
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VOICE
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearPassWord
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_MAIN
</UL>

<P><STRONG><a name="[da]"></a>KEYBD_MAIN</STRONG> (Thumb, 362 bytes, Stack size 8 bytes, keybd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_PassWord
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_ButtonRST
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdEmpty
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FP_POWER_ON
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VOICE
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyBD_State_Rst
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearPassWord
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[174]"></a>LOCK_MENU_1L</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lock.o(.text), UNUSED)

<P><STRONG><a name="[175]"></a>LOCK_MENU_2L</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lock.o(.text), UNUSED)

<P><STRONG><a name="[dc]"></a>LOCK_MAIN</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lock.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PASSWORD_MAIN
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FP_MAIN
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARD_MAIN
</UL>

<P><STRONG><a name="[89]"></a>KeyBD_State_Rst</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lock.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_ADMIN_SET
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEYBD_MAIN
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PASSWORD_Identify
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PASSWORD_Enroll
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdAutoEnroll
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARD_Identify
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARD_Enroll
</UL>

<P><STRONG><a name="[8e]"></a>ClearPassWord</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lock.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_ADMIN_SET
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEYBD_MAIN
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PASSWORD_MAIN
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FP_MAIN
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARD_MAIN
</UL>

<P><STRONG><a name="[dd]"></a>LOCK_ADMIN_SET</STRONG> (Thumb, 230 bytes, Stack size 16 bytes, lock.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_PassWord
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_ADMIN_PASSWORD
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_ADMIN_PASSWORD
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VOICE
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyBD_State_Rst
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearPassWord
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[50]"></a>LOCK_INIT</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, lock.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = LOCK_INIT &rArr; SYS_INIT &rArr; USART_INIT &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_INIT
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCU_SLEEP
</UL>

<P><STRONG><a name="[de]"></a>GPIO_INIT_MOTO</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, moto.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTO_lp_INIT
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTO_INIT
</UL>

<P><STRONG><a name="[57]"></a>led_init</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, moto.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = led_init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e0]"></a>MOTO_Standby</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, moto.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTO_lp_INIT
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTO_INIT
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTO_Forward
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTO_Back
</UL>

<P><STRONG><a name="[df]"></a>MOTO_Stop</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, moto.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTO_Forward
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTO_Back
</UL>

<P><STRONG><a name="[8c]"></a>MOTO_Forward</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, moto.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTO_Stop
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTO_Standby
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PASSWORD_Identify
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdAutoIdentify
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARD_Identify
</UL>

<P><STRONG><a name="[5c]"></a>MOTO_Back</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, moto.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MOTO_Back
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTO_Stop
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTO_Standby
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[e1]"></a>MOTO_INIT</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, moto.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTO_Standby
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_MOTO
</UL>

<P><STRONG><a name="[e2]"></a>MOTO_lp_INIT</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, moto.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTO_Standby
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_MOTO
</UL>

<P><STRONG><a name="[e3]"></a>GPIO_INIT_VBusy</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, voice.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VOICE_lp_INIT
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VOICE_INIT
</UL>

<P><STRONG><a name="[e4]"></a>GET_VBusy_State</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, voice.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VOICE
</UL>

<P><STRONG><a name="[e5]"></a>IIc_init</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, voice.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VOICE_test
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VOICE_lp_INIT
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VOICE_INIT
</UL>

<P><STRONG><a name="[e6]"></a>IIC_WR_MODE</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, voice.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_WRITE
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_WRITE_ACK
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STOP_CONDITION
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;START_CONDITION
</UL>

<P><STRONG><a name="[e7]"></a>IIC_RD_MODE</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, voice.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_READ
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_READ_ACK
</UL>

<P><STRONG><a name="[ea]"></a>IIC_DELAY</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, voice.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIICRegister
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_READ
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_WRITE
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_READ_ACK
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_WRITE_ACK
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STOP_CONDITION
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;START_CONDITION
</UL>

<P><STRONG><a name="[e8]"></a>SDA_V</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, voice.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_READ
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_READ_ACK
</UL>

<P><STRONG><a name="[e9]"></a>START_CONDITION</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, voice.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_DELAY
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_WR_MODE
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIICRegister
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetIICRegister
</UL>

<P><STRONG><a name="[eb]"></a>STOP_CONDITION</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, voice.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_DELAY
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_WR_MODE
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIICRegister
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetIICRegister
</UL>

<P><STRONG><a name="[ec]"></a>IIC_WRITE_ACK</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, voice.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_DELAY
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_WR_MODE
</UL>

<P><STRONG><a name="[ed]"></a>IIC_READ_ACK</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, voice.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_V
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_DELAY
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_RD_MODE
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_WRITE
</UL>

<P><STRONG><a name="[ee]"></a>IIC_WRITE</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, voice.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_READ_ACK
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_DELAY
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_WR_MODE
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIICRegister
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetIICRegister
</UL>

<P><STRONG><a name="[ef]"></a>IIC_READ</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, voice.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_V
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_DELAY
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_RD_MODE
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIICRegister
</UL>

<P><STRONG><a name="[f0]"></a>SetIICRegister</STRONG> (Thumb, 138 bytes, Stack size 40 bytes, voice.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_WRITE
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STOP_CONDITION
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;START_CONDITION
</UL>

<P><STRONG><a name="[f1]"></a>GetIICRegister</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, voice.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_READ
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_WRITE
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STOP_CONDITION
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;START_CONDITION
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_DELAY
</UL>

<P><STRONG><a name="[f2]"></a>VOICE_IIC_WRITE</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, voice.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VOICE_test
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VOICE
</UL>

<P><STRONG><a name="[f3]"></a>VOICE_INIT</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, voice.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIc_init
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_VBusy
</UL>

<P><STRONG><a name="[f4]"></a>VOICE_lp_INIT</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, voice.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIc_init
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_VBusy
</UL>

<P><STRONG><a name="[85]"></a>VOICE</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, voice.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VOICE_IIC_WRITE
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_VBusy_State
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_ADMIN_SET
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEYBD_MAIN
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PASSWORD_MAIN
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PASSWORD_Identify
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PASSWORD_Enroll
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FP_MAIN
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdEmpty
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdAutoIdentify
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdAutoEnroll
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FP_RcvDeal
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARD_MAIN
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARD_Identify
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARD_Enroll
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARD_GETID
</UL>

<P><STRONG><a name="[f5]"></a>VOICE_test</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, voice.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VOICE_IIC_WRITE
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIc_init
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>

<P><STRONG><a name="[5]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>DMA1_Channel2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>DMA1_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIM1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[14b]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_stm32f030.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[176]"></a>EXTI_DeInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_exti.o(.text), UNUSED)

<P><STRONG><a name="[a3]"></a>EXTI_Init</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, stm32f0xx_exti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_INT_TSM12
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_LOGO
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_RST
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_ADD
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_DEL
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_Touch
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LoraIO_DIO0_EXTIoff
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LoraIO_DIO0
</UL>

<P><STRONG><a name="[177]"></a>EXTI_StructInit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f0xx_exti.o(.text), UNUSED)

<P><STRONG><a name="[178]"></a>EXTI_GenerateSWInterrupt</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f0xx_exti.o(.text), UNUSED)

<P><STRONG><a name="[179]"></a>EXTI_GetFlagStatus</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f0xx_exti.o(.text), UNUSED)

<P><STRONG><a name="[69]"></a>EXTI_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_exti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
</UL>

<P><STRONG><a name="[61]"></a>EXTI_GetITStatus</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f0xx_exti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
</UL>

<P><STRONG><a name="[17a]"></a>EXTI_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_exti.o(.text), UNUSED)

<P><STRONG><a name="[17b]"></a>FLASH_SetLatency</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f0xx_flash.o(.text), UNUSED)

<P><STRONG><a name="[17c]"></a>FLASH_PrefetchBufferCmd</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f0xx_flash.o(.text), UNUSED)

<P><STRONG><a name="[17d]"></a>FLASH_GetPrefetchBufferStatus</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f0xx_flash.o(.text), UNUSED)

<P><STRONG><a name="[91]"></a>FLASH_Unlock</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f0xx_flash.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Erase
</UL>

<P><STRONG><a name="[93]"></a>FLASH_Lock</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f0xx_flash.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Erase
</UL>

<P><STRONG><a name="[f7]"></a>FLASH_GetStatus</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, stm32f0xx_flash.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[f6]"></a>FLASH_WaitForLastOperation</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32f0xx_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_ProgramData
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_WriteUser
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_SRAMParityConfig
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_VDDAConfig
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_BOOTConfig
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_UserConfig
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_RDPConfig
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_EnableWRP
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_Erase
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramWord
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EraseAllPages
</UL>

<P><STRONG><a name="[92]"></a>FLASH_ErasePage</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, stm32f0xx_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Erase
</UL>

<P><STRONG><a name="[f8]"></a>FLASH_EraseAllPages</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, stm32f0xx_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[f9]"></a>FLASH_ProgramWord</STRONG> (Thumb, 104 bytes, Stack size 20 bytes, stm32f0xx_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[95]"></a>FLASH_ProgramHalfWord</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, stm32f0xx_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write
</UL>

<P><STRONG><a name="[17e]"></a>FLASH_OB_Unlock</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f0xx_flash.o(.text), UNUSED)

<P><STRONG><a name="[17f]"></a>FLASH_OB_Lock</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f0xx_flash.o(.text), UNUSED)

<P><STRONG><a name="[180]"></a>FLASH_OB_Launch</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f0xx_flash.o(.text), UNUSED)

<P><STRONG><a name="[fb]"></a>FLASH_OB_GetRDP</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f0xx_flash.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_Erase
</UL>

<P><STRONG><a name="[fa]"></a>FLASH_OB_Erase</STRONG> (Thumb, 144 bytes, Stack size 12 bytes, stm32f0xx_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_OB_GetRDP
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[fc]"></a>FLASH_OB_EnableWRP</STRONG> (Thumb, 108 bytes, Stack size 20 bytes, stm32f0xx_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[fd]"></a>FLASH_OB_RDPConfig</STRONG> (Thumb, 134 bytes, Stack size 12 bytes, stm32f0xx_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[fe]"></a>FLASH_OB_UserConfig</STRONG> (Thumb, 102 bytes, Stack size 20 bytes, stm32f0xx_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[ff]"></a>FLASH_OB_BOOTConfig</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, stm32f0xx_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[100]"></a>FLASH_OB_VDDAConfig</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, stm32f0xx_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[101]"></a>FLASH_OB_SRAMParityConfig</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, stm32f0xx_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[102]"></a>FLASH_OB_WriteUser</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, stm32f0xx_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[103]"></a>FLASH_OB_ProgramData</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, stm32f0xx_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[181]"></a>FLASH_OB_GetUser</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f0xx_flash.o(.text), UNUSED)

<P><STRONG><a name="[182]"></a>FLASH_OB_GetWRP</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_flash.o(.text), UNUSED)

<P><STRONG><a name="[183]"></a>FLASH_ITConfig</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_flash.o(.text), UNUSED)

<P><STRONG><a name="[184]"></a>FLASH_GetFlagStatus</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f0xx_flash.o(.text), UNUSED)

<P><STRONG><a name="[90]"></a>FLASH_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_flash.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Erase
</UL>

<P><STRONG><a name="[104]"></a>GPIO_DeInit</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, stm32f0xx_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphResetCmd
</UL>

<P><STRONG><a name="[37]"></a>GPIO_Init</STRONG> (Thumb, 144 bytes, Stack size 20 bytes, stm32f0xx_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_RD_MODE
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_WR_MODE
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIc_init
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_VBusy
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_MOTO
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_RD_MODE_TSM12
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_WR_MODE_TSM12
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIc_init_TSM12
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_EN_TSM12
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_INT_TSM12
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_KBDLED
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_LOGO
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_RST
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_ADD
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_DEL
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_POWER
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_Touch
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_CARD3
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_CARD2
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_CARD1
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Init
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_INIT
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LoraIO_DIO3
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LoraIO_DIO1
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LoraIO_RST
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LoraIO_CS2
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LoraIO_CS
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LoraIO_PW
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LoraIO_DIO3_EXTIoff
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LoraIO_DIO1_EXTIoff
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LoraIO_DIO0_EXTIoff
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LoraIO_DIO0
</UL>

<P><STRONG><a name="[185]"></a>GPIO_StructInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[186]"></a>GPIO_PinLockConfig</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32f0xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[6e]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_V
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_VBusy_State
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_V_TSM12
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_ButtonRST
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_ButtonADD
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_ButtonDEL
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_FP_Touch
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRawRC
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_SendPacket
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Awake
</UL>

<P><STRONG><a name="[187]"></a>GPIO_ReadInputData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[188]"></a>GPIO_ReadOutputDataBit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[189]"></a>GPIO_ReadOutputData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[13b]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f0xx_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276WriteBuffer
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276SPISetup
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276Reset
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276ReadBuffer
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LoraIO_CS2
</UL>

<P><STRONG><a name="[13f]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f0xx_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276WriteBuffer
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276Reset
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276ReadBuffer
</UL>

<P><STRONG><a name="[18a]"></a>GPIO_WriteBit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f0xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[18b]"></a>GPIO_Write</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f0xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[40]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 68 bytes, Stack size 20 bytes, stm32f0xx_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Init
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_INIT
</UL>

<P><STRONG><a name="[3e]"></a>NVIC_Init</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, stm32f0xx_misc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_INT_TSM12
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_LOGO
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_RST
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_ADD
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_DEL
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_Touch
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_INIT
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LoraIO_DIO0_EXTIoff
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LoraIO_DIO0
</UL>

<P><STRONG><a name="[18c]"></a>NVIC_SystemLPConfig</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_misc.o(.text), UNUSED)

<P><STRONG><a name="[18d]"></a>SysTick_CLKSourceConfig</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f0xx_misc.o(.text), UNUSED)

<P><STRONG><a name="[106]"></a>PWR_DeInit</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm32f0xx_pwr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
</UL>

<P><STRONG><a name="[18e]"></a>PWR_BackupAccessCmd</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, stm32f0xx_pwr.o(.text), UNUSED)

<P><STRONG><a name="[18f]"></a>PWR_PVDLevelConfig</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_pwr.o(.text), UNUSED)

<P><STRONG><a name="[190]"></a>PWR_PVDCmd</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f0xx_pwr.o(.text), UNUSED)

<P><STRONG><a name="[191]"></a>PWR_WakeUpPinCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_pwr.o(.text), UNUSED)

<P><STRONG><a name="[192]"></a>PWR_EnterSleepMode</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f0xx_pwr.o(.text), UNUSED)

<P><STRONG><a name="[4f]"></a>PWR_EnterSTOPMode</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f0xx_pwr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCU_SLEEP
</UL>

<P><STRONG><a name="[193]"></a>PWR_EnterSTANDBYMode</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32f0xx_pwr.o(.text), UNUSED)

<P><STRONG><a name="[194]"></a>PWR_GetFlagStatus</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f0xx_pwr.o(.text), UNUSED)

<P><STRONG><a name="[195]"></a>PWR_ClearFlag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f0xx_pwr.o(.text), UNUSED)

<P><STRONG><a name="[196]"></a>RCC_DeInit</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[197]"></a>RCC_HSEConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[109]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, stm32f0xx_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_WaitForHSEStartUp
</UL>

<P><STRONG><a name="[108]"></a>RCC_WaitForHSEStartUp</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, stm32f0xx_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
</UL>

<P><STRONG><a name="[198]"></a>RCC_AdjustHSICalibrationValue</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[199]"></a>RCC_HSICmd</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[19a]"></a>RCC_AdjustHSI14CalibrationValue</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[19b]"></a>RCC_HSI14Cmd</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[19c]"></a>RCC_HSI14ADCRequestCmd</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[19d]"></a>RCC_LSEConfig</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[19e]"></a>RCC_LSEDriveConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[19f]"></a>RCC_LSICmd</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[1a0]"></a>RCC_PLLConfig</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[1a1]"></a>RCC_PLLCmd</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[1a2]"></a>RCC_PREDIV1Config</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[1a3]"></a>RCC_ClockSecuritySystemCmd</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[1a4]"></a>RCC_MCOConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[1a5]"></a>RCC_SYSCLKConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[1a6]"></a>RCC_GetSYSCLKSource</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[1a7]"></a>RCC_HCLKConfig</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[1a8]"></a>RCC_PCLKConfig</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[1a9]"></a>RCC_ADCCLKConfig</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[1aa]"></a>RCC_CECCLKConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[1ab]"></a>RCC_I2CCLKConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[1ac]"></a>RCC_USARTCLKConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[10a]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 368 bytes, Stack size 32 bytes, stm32f0xx_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_Init
</UL>

<P><STRONG><a name="[1ad]"></a>RCC_RTCCLKConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[1ae]"></a>RCC_RTCCLKCmd</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[1af]"></a>RCC_BackupResetCmd</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[36]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_RD_MODE
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_WR_MODE
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIc_init
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_VBusy
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_MOTO
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_RD_MODE_TSM12
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_WR_MODE_TSM12
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIc_init_TSM12
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_EN_TSM12
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_INT_TSM12
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_KBDLED
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_LOGO
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_RST
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_ADD
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_DEL
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_POWER
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_Touch
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_CARD3
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_CARD2
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_CARD1
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Init
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_INIT
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LoraIO_DIO3
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LoraIO_DIO1
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LoraIO_RST
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LoraIO_CS2
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LoraIO_CS
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LoraIO_PW
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LoraIO_DIO3_EXTIoff
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LoraIO_DIO1_EXTIoff
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LoraIO_DIO0_EXTIoff
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LoraIO_DIO0
</UL>

<P><STRONG><a name="[3f]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_INT_TSM12
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_LOGO
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_RST
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_ADD
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_DEL
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_Touch
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_INIT
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LoraIO_DIO3
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LoraIO_DIO3_EXTIoff
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LoraIO_DIO0_EXTIoff
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LoraIO_DIO0
</UL>

<P><STRONG><a name="[39]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Init
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCU_SLEEP
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_INIT
</UL>

<P><STRONG><a name="[105]"></a>RCC_AHBPeriphResetCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DeInit
</UL>

<P><STRONG><a name="[10c]"></a>RCC_APB2PeriphResetCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DeInit
</UL>

<P><STRONG><a name="[107]"></a>RCC_APB1PeriphResetCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DeInit
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_DeInit
</UL>

<P><STRONG><a name="[1b0]"></a>RCC_ITConfig</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[1b1]"></a>RCC_ClearFlag</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[1b2]"></a>RCC_GetITStatus</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[1b3]"></a>RCC_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[10b]"></a>SPI_I2S_DeInit</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, stm32f0xx_spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>

<P><STRONG><a name="[1b4]"></a>SPI_StructInit</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f0xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[52]"></a>SPI_Init</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, stm32f0xx_spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Init
</UL>

<P><STRONG><a name="[1b5]"></a>I2S_StructInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[10d]"></a>I2S_Init</STRONG> (Thumb, 228 bytes, Stack size 72 bytes, stm32f0xx_spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[53]"></a>SPI_Cmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f0xx_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Init
</UL>

<P><STRONG><a name="[1b6]"></a>SPI_TIModeCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f0xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[1b7]"></a>I2S_Cmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f0xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[1b8]"></a>SPI_DataSizeConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[1b9]"></a>SPI_RxFIFOThresholdConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f0xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[1ba]"></a>SPI_BiDirectionalLineConfig</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[1bb]"></a>SPI_NSSInternalSoftwareConfig</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f0xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[1bc]"></a>SPI_SSOutputCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f0xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[1bd]"></a>SPI_NSSPulseModeCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f0xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[142]"></a>SPI_SendData8</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f0xx_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_ReceiveData
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_SendData
</UL>

<P><STRONG><a name="[1be]"></a>SPI_I2S_SendData16</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f0xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[144]"></a>SPI_ReceiveData8</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f0xx_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_ReceiveData
</UL>

<P><STRONG><a name="[1bf]"></a>SPI_I2S_ReceiveData16</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[1c0]"></a>SPI_CRCLengthConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f0xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[1c1]"></a>SPI_CalculateCRC</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f0xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[1c2]"></a>SPI_TransmitCRC</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f0xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[1c3]"></a>SPI_GetCRC</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f0xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[1c4]"></a>SPI_GetCRCPolynomial</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[1c5]"></a>SPI_I2S_DMACmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[1c6]"></a>SPI_LastDMATransferCmd</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f0xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[1c7]"></a>SPI_I2S_ITConfig</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, stm32f0xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[1c8]"></a>SPI_GetTransmissionFIFOStatus</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f0xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[1c9]"></a>SPI_GetReceptionFIFOStatus</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f0xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[141]"></a>SPI_I2S_GetFlagStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_ReceiveData
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_SendData
</UL>

<P><STRONG><a name="[1ca]"></a>SPI_I2S_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[1cb]"></a>SPI_I2S_GetITStatus</STRONG> (Thumb, 56 bytes, Stack size 20 bytes, stm32f0xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[1cc]"></a>SYSCFG_DeInit</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32f0xx_syscfg.o(.text), UNUSED)

<P><STRONG><a name="[1cd]"></a>SYSCFG_MemoryRemapConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f0xx_syscfg.o(.text), UNUSED)

<P><STRONG><a name="[1ce]"></a>SYSCFG_DMAChannelRemapConfig</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_syscfg.o(.text), UNUSED)

<P><STRONG><a name="[1cf]"></a>SYSCFG_I2CFastModePlusConfig</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_syscfg.o(.text), UNUSED)

<P><STRONG><a name="[a2]"></a>SYSCFG_EXTILineConfig</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, stm32f0xx_syscfg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SYSCFG_EXTILineConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_INT_TSM12
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_LOGO
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_RST
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_ADD
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_DEL
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT_Touch
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LoraIO_DIO0_EXTIoff
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LoraIO_DIO0
</UL>

<P><STRONG><a name="[1d0]"></a>SYSCFG_BreakConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f0xx_syscfg.o(.text), UNUSED)

<P><STRONG><a name="[1d1]"></a>SYSCFG_GetFlagStatus</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f0xx_syscfg.o(.text), UNUSED)

<P><STRONG><a name="[1d2]"></a>SYSCFG_ClearFlag</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f0xx_syscfg.o(.text), UNUSED)

<P><STRONG><a name="[10e]"></a>TIM_DeInit</STRONG> (Thumb, 204 bytes, Stack size 8 bytes, stm32f0xx_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>

<P><STRONG><a name="[3a]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_INIT
</UL>

<P><STRONG><a name="[1d3]"></a>TIM_TimeBaseStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[1d4]"></a>TIM_PrescalerConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[1d5]"></a>TIM_CounterModeConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[1d6]"></a>TIM_SetCounter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[1d7]"></a>TIM_SetAutoreload</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[1d8]"></a>TIM_GetCounter</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[1d9]"></a>TIM_GetPrescaler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[1da]"></a>TIM_UpdateDisableConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[1db]"></a>TIM_UpdateRequestConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[1dc]"></a>TIM_ARRPreloadConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[1dd]"></a>TIM_SelectOnePulseMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[1de]"></a>TIM_SetClockDivision</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[3c]"></a>TIM_Cmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_INIT
</UL>

<P><STRONG><a name="[1df]"></a>TIM_BDTRConfig</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[1e0]"></a>TIM_BDTRStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[1e1]"></a>TIM_CtrlPWMOutputs</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[1e2]"></a>TIM_OC1Init</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[1e3]"></a>TIM_OC2Init</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[1e4]"></a>TIM_OC3Init</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[1e5]"></a>TIM_OC4Init</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[1e6]"></a>TIM_OCStructInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[1e7]"></a>TIM_SelectOCxM</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[1e8]"></a>TIM_SetCompare1</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[1e9]"></a>TIM_SetCompare2</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[1ea]"></a>TIM_SetCompare3</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[1eb]"></a>TIM_SetCompare4</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[1ec]"></a>TIM_ForcedOC1Config</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[1ed]"></a>TIM_ForcedOC2Config</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[1ee]"></a>TIM_ForcedOC3Config</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[1ef]"></a>TIM_ForcedOC4Config</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[1f0]"></a>TIM_CCPreloadControl</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[1f1]"></a>TIM_OC1PreloadConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[1f2]"></a>TIM_OC2PreloadConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[1f3]"></a>TIM_OC3PreloadConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[1f4]"></a>TIM_OC4PreloadConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[1f5]"></a>TIM_OC1FastConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[1f6]"></a>TIM_OC2FastConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[1f7]"></a>TIM_OC3FastConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[1f8]"></a>TIM_OC4FastConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[1f9]"></a>TIM_ClearOC1Ref</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[1fa]"></a>TIM_ClearOC2Ref</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[1fb]"></a>TIM_ClearOC3Ref</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[1fc]"></a>TIM_ClearOC4Ref</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[1fd]"></a>TIM_OC1PolarityConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[1fe]"></a>TIM_OC1NPolarityConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[1ff]"></a>TIM_OC2PolarityConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[200]"></a>TIM_OC2NPolarityConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[201]"></a>TIM_OC3PolarityConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[202]"></a>TIM_OC3NPolarityConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[203]"></a>TIM_OC4PolarityConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[204]"></a>TIM_SelectOCREFClear</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[205]"></a>TIM_CCxCmd</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[206]"></a>TIM_CCxNCmd</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[207]"></a>TIM_SelectCOM</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[117]"></a>TIM_SetIC4Prescaler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[115]"></a>TIM_SetIC3Prescaler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[113]"></a>TIM_SetIC2Prescaler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[111]"></a>TIM_SetIC1Prescaler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[10f]"></a>TIM_ICInit</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, stm32f0xx_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC1Prescaler
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC2Prescaler
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC3Prescaler
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC4Prescaler
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI3_Config
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI4_Config
</UL>

<P><STRONG><a name="[208]"></a>TIM_ICStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[118]"></a>TIM_PWMIConfig</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, stm32f0xx_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC1Prescaler
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC2Prescaler
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
</UL>

<P><STRONG><a name="[209]"></a>TIM_GetCapture1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[20a]"></a>TIM_GetCapture2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[20b]"></a>TIM_GetCapture3</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[20c]"></a>TIM_GetCapture4</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[3b]"></a>TIM_ITConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_INIT
</UL>

<P><STRONG><a name="[20d]"></a>TIM_GenerateEvent</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[20e]"></a>TIM_GetFlagStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[20f]"></a>TIM_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5f]"></a>TIM_GetITStatus</STRONG> (Thumb, 38 bytes, Stack size 12 bytes, stm32f0xx_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[60]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[210]"></a>TIM_DMAConfig</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[211]"></a>TIM_DMACmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[212]"></a>TIM_SelectCCDMA</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[213]"></a>TIM_InternalClockConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[11a]"></a>TIM_SelectInputTrigger</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TIxExternalClockConfig
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITRxExternalClockConfig
</UL>

<P><STRONG><a name="[119]"></a>TIM_ITRxExternalClockConfig</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, stm32f0xx_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SelectInputTrigger
</UL>

<P><STRONG><a name="[11b]"></a>TIM_TIxExternalClockConfig</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, stm32f0xx_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SelectInputTrigger
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
</UL>

<P><STRONG><a name="[11d]"></a>TIM_ETRConfig</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, stm32f0xx_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRClockMode2Config
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRClockMode1Config
</UL>

<P><STRONG><a name="[11c]"></a>TIM_ETRClockMode1Config</STRONG> (Thumb, 48 bytes, Stack size 36 bytes, stm32f0xx_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRConfig
</UL>

<P><STRONG><a name="[11e]"></a>TIM_ETRClockMode2Config</STRONG> (Thumb, 34 bytes, Stack size 20 bytes, stm32f0xx_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRConfig
</UL>

<P><STRONG><a name="[214]"></a>TIM_SelectOutputTrigger</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[215]"></a>TIM_SelectSlaveMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[216]"></a>TIM_SelectMasterSlaveMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[217]"></a>TIM_EncoderInterfaceConfig</STRONG> (Thumb, 60 bytes, Stack size 20 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[218]"></a>TIM_SelectHallSensor</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[219]"></a>TIM_RemapConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[11f]"></a>USART_DeInit</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, stm32f0xx_usart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>

<P><STRONG><a name="[41]"></a>USART_Init</STRONG> (Thumb, 202 bytes, Stack size 56 bytes, stm32f0xx_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_INIT
</UL>

<P><STRONG><a name="[21a]"></a>USART_StructInit</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[21b]"></a>USART_ClockInit</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[21c]"></a>USART_ClockStructInit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[42]"></a>USART_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_lp_INIT
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_INIT
</UL>

<P><STRONG><a name="[21d]"></a>USART_DirectionModeCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[21e]"></a>USART_OverSampling8Cmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[21f]"></a>USART_OneBitMethodCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[220]"></a>USART_MSBFirstCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[221]"></a>USART_DataInvCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[222]"></a>USART_InvPinCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[223]"></a>USART_SWAPPinCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[224]"></a>USART_ReceiverTimeOutCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[225]"></a>USART_SetReceiverTimeOut</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[226]"></a>USART_SetPrescaler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[227]"></a>USART_STOPModeCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[228]"></a>USART_StopModeWakeUpSourceConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[229]"></a>USART_AutoBaudRateCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[22a]"></a>USART_AutoBaudRateConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[22b]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[5e]"></a>USART_ReceiveData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[22c]"></a>USART_SetAddress</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[22d]"></a>USART_MuteModeCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[22e]"></a>USART_MuteModeWakeUpConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[22f]"></a>USART_AddressDetectionConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[230]"></a>USART_LINBreakDetectLengthConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[231]"></a>USART_LINCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[232]"></a>USART_HalfDuplexCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[233]"></a>USART_SetGuardTime</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[234]"></a>USART_SmartCardCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[235]"></a>USART_SmartCardNACKCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[236]"></a>USART_SetAutoRetryCount</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[237]"></a>USART_SetBlockLength</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[238]"></a>USART_IrDAConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[239]"></a>USART_IrDACmd</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[23a]"></a>USART_DECmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[23b]"></a>USART_DEPolarityConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[23c]"></a>USART_SetDEAssertionTime</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[23d]"></a>USART_SetDEDeassertionTime</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[23e]"></a>USART_DMACmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[23f]"></a>USART_DMAReceptionErrorConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[43]"></a>USART_ITConfig</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, stm32f0xx_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_INIT
</UL>

<P><STRONG><a name="[240]"></a>USART_RequestCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[241]"></a>USART_OverrunDetectionConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[242]"></a>USART_GetFlagStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[243]"></a>USART_ClearFlag</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[5d]"></a>USART_GetITStatus</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, stm32f0xx_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[244]"></a>USART_ClearITPendingBit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32f0xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[59]"></a>Init_RF</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, rf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Init_RF &rArr; SX127x_init &rArr; RF_FreqSet &rArr; LSD_RF_StandbyMode &rArr; SX1276Write &rArr; SX1276WriteBuffer &rArr; SPI_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_RXmode
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX127x_init
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_FreqSet
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[122]"></a>RF_Send</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, rf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = RF_Send &rArr; RF_SendPacket &rArr; SX1276_TxPacket &rArr; SX1276Write &rArr; SX1276WriteBuffer &rArr; SPI_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_SendPacket
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_RXmode
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lora_Sendtest
</UL>

<P><STRONG><a name="[123]"></a>RF_PackRcv</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, rf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[5a]"></a>Lora_Sendtest</STRONG> (Thumb, 34 bytes, Stack size 32 bytes, rf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Lora_Sendtest &rArr; RF_Send &rArr; RF_SendPacket &rArr; SX1276_TxPacket &rArr; SX1276Write &rArr; SX1276WriteBuffer &rArr; SPI_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Send
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[125]"></a>LSD_RF_StandbyMode</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, sx1276.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LSD_RF_StandbyMode &rArr; SX1276Write &rArr; SX1276WriteBuffer &rArr; SPI_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276Write
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_FreqSet
</UL>

<P><STRONG><a name="[121]"></a>RF_FreqSet</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, sx1276.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = RF_FreqSet &rArr; LSD_RF_StandbyMode &rArr; SX1276Write &rArr; SX1276WriteBuffer &rArr; SPI_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276Write
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276Read
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSD_RF_StandbyMode
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_RF
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX127x_init
</UL>

<P><STRONG><a name="[120]"></a>SX127x_init</STRONG> (Thumb, 268 bytes, Stack size 16 bytes, sx1276.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SX127x_init &rArr; RF_FreqSet &rArr; LSD_RF_StandbyMode &rArr; SX1276Write &rArr; SX1276WriteBuffer &rArr; SPI_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276InitIo
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276Write
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276SPISetup
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276Reset
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276Read
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_FreqSet
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_RF
</UL>

<P><STRONG><a name="[12a]"></a>SX1276_TxPacket</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, sx1276.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SX1276_TxPacket &rArr; SX1276Write &rArr; SX1276WriteBuffer &rArr; SPI_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276WriteBuffer
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276Write
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_SendPacket
</UL>

<P><STRONG><a name="[12c]"></a>Rx_mode</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, sx1276.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Rx_mode &rArr; SX1276Write &rArr; SX1276WriteBuffer &rArr; SPI_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276Write
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_RXmode
</UL>

<P><STRONG><a name="[12d]"></a>RF_RxVariPacket</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, sx1276.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276Write
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276ReadFifo
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276Read
</UL>

<P><STRONG><a name="[62]"></a>RF_RxFixiPacket</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, sx1276.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = RF_RxFixiPacket &rArr; SX1276Write &rArr; SX1276WriteBuffer &rArr; SPI_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276Write
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276ReadFifo
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
</UL>

<P><STRONG><a name="[12f]"></a>LSD_RF_SleepMode</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, sx1276.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276Write
</UL>

<P><STRONG><a name="[64]"></a>RF_SendPacket</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, sx1276_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = RF_SendPacket &rArr; SX1276_TxPacket &rArr; SX1276Write &rArr; SX1276WriteBuffer &rArr; SPI_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276_TxPacket
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LoraIO_DIO0_EXTIoff
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Send
</UL>

<P><STRONG><a name="[65]"></a>RF_RXmode</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, sx1276_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = RF_RXmode &rArr; Rx_mode &rArr; SX1276Write &rArr; SX1276WriteBuffer &rArr; SPI_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rx_mode
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LoraIO_DIO0
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_RF
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Send
</UL>

<P><STRONG><a name="[67]"></a>RF_Sleepmode</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, sx1276_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = RF_Sleepmode &rArr; SX1276Write &rArr; SX1276WriteBuffer &rArr; SPI_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276Write
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
</UL>

<P><STRONG><a name="[132]"></a>RF_CADinit</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, sx1276_app.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276Write
</UL>

<P><STRONG><a name="[133]"></a>RF_CAD_Sample</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, sx1276_app.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276Write
</UL>

<P><STRONG><a name="[66]"></a>RF_WORInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sx1276_app.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
</UL>

<P><STRONG><a name="[134]"></a>RF_WOR_Exit</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sx1276_app.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276Write
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LoraIO_DIO3_EXTIoff
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LoraIO_DIO1_EXTIoff
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LoraIO_DIO0
</UL>

<P><STRONG><a name="[137]"></a>RF_Awake</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, sx1276_app.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276WriteBuffer
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276Write
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LoraIO_DIO0_EXTIoff
</UL>

<P><STRONG><a name="[138]"></a>Init_LoraIO_PW</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, sx1276_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Init_LoraIO_PW &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276InitIo
</UL>

<P><STRONG><a name="[139]"></a>Init_LoraIO_CS</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, sx1276_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Init_LoraIO_CS &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276InitIo
</UL>

<P><STRONG><a name="[13a]"></a>Init_LoraIO_CS2</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, sx1276_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Init_LoraIO_CS2 &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276InitIo
</UL>

<P><STRONG><a name="[13c]"></a>Init_LoraIO_RST</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, sx1276_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Init_LoraIO_RST &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276InitIo
</UL>

<P><STRONG><a name="[13d]"></a>Init_LoraIO_DIO1</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, sx1276_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Init_LoraIO_DIO1 &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276InitIo
</UL>

<P><STRONG><a name="[135]"></a>Init_LoraIO_DIO1_EXTIoff</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, sx1276_hal.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_WOR_Exit
</UL>

<P><STRONG><a name="[13e]"></a>Init_LoraIO_DIO3</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, sx1276_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Init_LoraIO_DIO3 &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276InitIo
</UL>

<P><STRONG><a name="[136]"></a>Init_LoraIO_DIO3_EXTIoff</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, sx1276_hal.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_WOR_Exit
</UL>

<P><STRONG><a name="[131]"></a>Init_LoraIO_DIO0</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, sx1276_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Init_LoraIO_DIO0 &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCFG_EXTILineConfig
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_RXmode
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276InitIo
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_WOR_Exit
</UL>

<P><STRONG><a name="[130]"></a>Init_LoraIO_DIO0_EXTIoff</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, sx1276_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Init_LoraIO_DIO0_EXTIoff &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCFG_EXTILineConfig
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_SendPacket
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Awake
</UL>

<P><STRONG><a name="[58]"></a>SX1276InitIo</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, sx1276_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = SX1276InitIo &rArr; Init_LoraIO_DIO0 &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LoraIO_DIO3
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LoraIO_DIO1
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LoraIO_RST
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LoraIO_CS2
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LoraIO_CS
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LoraIO_PW
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_LoraIO_DIO0
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX127x_init
</UL>

<P><STRONG><a name="[129]"></a>SX1276SPISetup</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, sx1276_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SX1276SPISetup
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX127x_init
</UL>

<P><STRONG><a name="[128]"></a>SX1276Reset</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, sx1276_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SX1276Reset
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX127x_init
</UL>

<P><STRONG><a name="[140]"></a>SPI_SendData</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, sx1276_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_SendData8
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276WriteBuffer
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276ReadBuffer
</UL>

<P><STRONG><a name="[12b]"></a>SX1276WriteBuffer</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, sx1276_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SX1276WriteBuffer &rArr; SPI_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276Write
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276_TxPacket
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276WriteFifo
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Awake
</UL>

<P><STRONG><a name="[143]"></a>SPI_ReceiveData</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, sx1276_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_ReceiveData
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_ReceiveData8
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_SendData8
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276ReadBuffer
</UL>

<P><STRONG><a name="[145]"></a>SX1276ReadBuffer</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, sx1276_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SX1276ReadBuffer &rArr; SPI_ReceiveData
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_ReceiveData
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276ReadFifo
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276Read
</UL>

<P><STRONG><a name="[126]"></a>SX1276Write</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, sx1276_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SX1276Write &rArr; SX1276WriteBuffer &rArr; SPI_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276WriteBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Sleepmode
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_RxFixiPacket
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSD_RF_SleepMode
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_RxVariPacket
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rx_mode
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276_TxPacket
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSD_RF_StandbyMode
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX127x_init
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_FreqSet
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Awake
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_WOR_Exit
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_CAD_Sample
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_CADinit
</UL>

<P><STRONG><a name="[127]"></a>SX1276Read</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, sx1276_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SX1276Read &rArr; SX1276ReadBuffer &rArr; SPI_ReceiveData
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276ReadBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_RxVariPacket
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX127x_init
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_FreqSet
</UL>

<P><STRONG><a name="[146]"></a>SX1276WriteFifo</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, sx1276_hal.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276WriteBuffer
</UL>

<P><STRONG><a name="[12e]"></a>SX1276ReadFifo</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, sx1276_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SX1276ReadFifo &rArr; SX1276ReadBuffer &rArr; SPI_ReceiveData
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1276ReadBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_RxFixiPacket
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_RxVariPacket
</UL>

<P><STRONG><a name="[9a]"></a>__aeabi_memcpy</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, rt_memcpy.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_ADMIN_SET
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USER_GETPASSWORD
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FP_RcvDeal
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FP_SendCmd_Empty
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FP_SendCmd_DeleteChar
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FP_SendCmd_AutoEnroll
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FP_SendCmd_AutoIdentify
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USER_UPDATA_USERID
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FP_UPDATA_FPID
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_ADMIN_PASSWORD
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_ADMIN_PASSWORD
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARD_UPDATA_CARDID
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_PackRcv
</UL>

<P><STRONG><a name="[245]"></a>__rt_memcpy</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, rt_memcpy.o(.text), UNUSED)

<P><STRONG><a name="[63]"></a>__aeabi_memset</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, aeabi_memset.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memset
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyBD_State_Rst
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearPassWord
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
</UL>

<P><STRONG><a name="[148]"></a>_memset_w</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>

<P><STRONG><a name="[147]"></a>_memset</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[db]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEYBD_MAIN
</UL>

<P><STRONG><a name="[246]"></a>__rt_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[247]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[248]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[149]"></a>__rt_memclr_w</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[249]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[46]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSTICK_INIT
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_Init
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>

<P><STRONG><a name="[24a]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[24b]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[24c]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[24d]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[24e]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[2b]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[30]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[24f]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[14a]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[250]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[34]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[251]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[252]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[253]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[47]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, drv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSTICK_INIT
</UL>

<P><STRONG><a name="[6a]"></a>SetSysClock</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, system_stm32f0xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[116]"></a>TI4_Config</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, stm32f0xx_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[114]"></a>TI3_Config</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, stm32f0xx_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[112]"></a>TI2_Config</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, stm32f0xx_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TIxExternalClockConfig
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[110]"></a>TI1_Config</STRONG> (Thumb, 54 bytes, Stack size 20 bytes, stm32f0xx_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TIxExternalClockConfig
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[14c]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
